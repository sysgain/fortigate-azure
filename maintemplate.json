{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Username for fortigate Virtual Machine, make a note of the Username this will be used further"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Password for fortigate Virtual Machine,make a note of the Password this will be used further."
            }
        },
        "fortigateVMSize": {
            "type": "string",
            "defaultValue": "Standard_F1",
            "allowedValues": [
                "Standard_F1",
                "Standard_F16s",
                "Standard_F1s",
                "Standard_F2",
                "Standard_F2s",
                "Standard_F4",
                "Standard_F4s",
                "Standard_F8",
                "Standard_F8s"
            ],
            "metadata": {
                "description": "Fortigate Virtual Machine size(If you select any other size than the default one the cost will be more)"
            }
        },
        "azureLogin":{
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description":"Provide the Azure portal login id"
            }
        },
        "azurePassword":{
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description":"Provide the Azure portal login password"
            }
        },
        "tenantID":{
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description":"Provide tenantID for the current subscription"
            }
        },
        "clientID":{
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description":"Provide application ID of the service principle which crated earlier"
            }
        },
        "ClientSecret":{
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description":"Provide password of the service principle"
            }
        },
        "subscriptionID":{
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description":"Provide the current subscription ID"
            }
        },
        "fabricConnectorWorkloadAddressName":{
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description":"Provide the name of the fabric connector address"
            }
        },
        "fabricConnectorFirewallAddressName":{
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description":"Provide the name of the FortiGate firewall address name"
            }
        },
        "hubFotigateVNetCIDR":{
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description":"Provide the CIDR address for FortiGate vnet(Hub vnet)"
            }
        },
        "FortiGatePublicFacingSubnetCIDR":{
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description":"Provide the CIDR address for FortiGate public facing subnet"
            }
        },
        "FortiGateInsideSubnetCIDR":{
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": {
                "description":"Provide the CIDR address for FortiGate internal(private facing) subnet"
            }
        },
        "FortiGatePublicFacingSubnetAddress":{
            "type": "string",
            "defaultValue": "10.0.0.4",
            "metadata": {
                "description":"Provide the static address of public facing subnet"
            }
        },
        "FortiGateInsideSubnetAddress":{
            "type": "string",
            "defaultValue": "10.0.1.4",
            "metadata": {
                "description":"Provide the static address of internal(private facing) subnet"
            }
        },
        "spokeDemoVnetCIDR":{
            "type": "string",
            "defaultValue": "172.1.0.0/16",
            "metadata": {
                "description":"Provide the CIDR address for Demo vnet(spoke)"
            }
        },
        "spokeDemoSubnetCIDR1":{
            "type": "string",
            "defaultValue": "172.1.0.0/24",
            "metadata": {
                "description":"provide the CIDR address for Demo subnet1(spoke1)"
            }
        },
        "spokeDemoSubnetCIDR2":{
            "type": "string",
            "defaultValue": "172.1.1.0/24",
            "metadata": {
                "description":"Provide the CIDR address for Demo subnet2(spoke2)"
            }
        }
    },
    "variables": {
        "apiVersions": {
            "deploymentApiVersion": "2016-02-01",
            "computeApiVersion": "2018-06-01",
            "networkApiVersion": "2017-09-01",
            "routtableApiVersion": "2015-06-15"
        },
        "networkSettings": {
            "location": "[variables('location')]",
            "networkApiVersion": "2016-03-30",
            "virtualNetworkName": "[concat('ForiGateVNET',variables('suffix'))]",
            "addressPrefix": "[parameters('hubFotigateVNetCIDR')]",
            "subnet1Name": "[concat('PublicFacingSubnet',variables('suffix'))]",
            "subnet1Prefix": "[parameters('FortiGatePublicFacingSubnetCIDR')]",
            "subnet2Name": "[concat('InternalSubnet',variables('suffix'))]",
            "subnet2Prefix": "[parameters('FortiGateInsideSubnetCIDR')]"
        },
        "wlNetworkSettings": {
            "location": "[variables('location')]",
            "networkApiVersion": "2016-03-30",
            "virtualNetworkName": "[concat('workLoadsVNET',variables('suffix'))]",
            "addressPrefix": "[parameters('spokeDemoVnetCIDR')]",
            "subnetName1": "[concat('wlSubnet1',variables('suffix'))]",
            "subnetName2": "[concat('wlSubnet2',variables('suffix'))]",
            "subnetPrefix1": "[parameters('spokeDemoSubnetCIDR1')]",
            "subnetPrefix2": "[parameters('spokeDemoSubnetCIDR2')]"
        },
        "fortigateFirewallSettings": {
            "location": "[variables('location')]",
            "fortiAvailName": "[concat('forti-avset',variables('suffix'))]",
            "FGPubFacingAddress": "[parameters('FortiGatePublicFacingSubnetAddress')]",
            "FGDMZAddress": "[parameters('FortiGateInsideSubnetAddress')]",
            "fortiPublicIPAddressName": "[concat('forti-pip',variables('suffix'))]",
            "publicIPAddressType": "Dynamic",
            "FortiGateName": "[concat('fortigateVM',variables('suffix'))]",
            "fortiNicName1": "[concat('forti-nic-1',variables('suffix'))]",
            "fortiNicName2": "[concat('forti-nic-2',variables('suffix'))]",
            "sku": "fortinet_fg-vm_payg",
            "version": "6.0.4",
            "product": "fortinet_fortigate-vm_v5",
            "publisher": "fortinet",
            "fortigateVMSize": "[parameters('fortigateVMSize')]",
            "storageAccountType": "Standard_LRS",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "fortiDnsLabelPrefix": "[concat('fortigate',variables('suffix'))]",
            "routeTable1Name": "[concat('fortigate', '-', variables('networkSettings').subnet1Name,'-routes')]",
            "routeTable2Name": "[concat('fortigate', '-', variables('networkSettings').subnet2Name,'-routes')]",
            "networkSecurityGroupName":"[concat('fortigatensg',variables('suffix'))]",
            "userData": "[concat('config firewall policy \n edit 0 \n set name \"outbound\" \n set srcintf \"port2\" \n set dstintf \"port1\" \n set srcaddr \"all\" \n set dstaddr \"all\" \n set action accept \n set schedule \"always\" \n set service \"ALL\" \n set nat enable \n next \n end \n config system sdn-connector \n edit \"fg-azure-sdn\" \n set status enable \n set type azure \n set tenant-id \"',parameters('tenantID'),'\" \n set subscription-id \"',parameters('subscriptionID'),'\" \n set client-id \"',parameters('clientID'),'\" \n set client-secret \"',parameters('clientSecret'),'\" \n set resource-group \"', variables('rgName'),'\" \n set azure-region global \n set update-interval 60 \n end \n config firewall address \n edit \"',parameters('fabricConnectorWorkloadAddressName'),'\" \n set type dynamic \n set comment ','',' \n set visibility enable \n set associated-interface ','', '\n set color 0 \n set sdn azure \n set filter \"tag.displayName=web\" \n next \n end \n config firewall address \n edit \"',parameters('fabricConnectorFirewallAddressName'),'\" \n set type dynamic \n set comment ','',' \n set visibility enable \n set associated-interface ','', '\n set color 0 \n set sdn azure \n set filter \"tag.displayName=firewall\" \n next \n end')]"
        },
        "workloadsSettings": {
            "location": "[variables('location')]",
            "virtualMachineName1": "[concat('workloadVM-1',variables('suffix'))]",
            "virtualMachineName2": "[concat('workloadVM-2',variables('suffix'))]",
            "publicIPdnsPrefix": "[concat('workloadpip',variables('suffix'))]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "nicName1": "[concat('wl-nic-1',variables('suffix'))]",
            "nicName2": "[concat('wl-nic-2',variables('suffix'))]",
            "networkSecurityGroupName": "[concat('workload-nsg',variables('suffix'))]",
            "publicIpAddressName": "[concat('workload-pip',variables('suffix'))]",
            "publicIpAddressType": "Static",
            "vmSize": "Standard_DS1_v2",
            "osPublisher": "Canonical",
            "osOffer": "UbuntuServer",
            "osSku": "16.04-LTS",
            "storageAccountType": "Standard_LRS",
            "routeTableName":"[concat('WorkloadRoute',variables('suffix'))]",
            "tenantID":"[parameters('tenantID')]",
            "clientID":"[parameters('clientID')]",
            "ClientSecret":"[parameters('ClientSecret')]",
            "subscriptionID":"[parameters('subscriptionID')]",
            "rgName":"[variables('rgName')]",
            "fileUri":"[concat(variables('baseUrl'),'scripts/fg-automate.sh?token=AE7OLVJVBIOFS4ONPXOHBOK4Y7UP6')]"
        },
        "EndUserVMSettings": {
            "vnetName": "[concat('enduserVNET',variables('suffix'))]",
            "subnetName": "[concat('endusersubnet',variables('suffix'))]",
            "addressPrefix": "10.5.0.0/16",
            "subnetPrefix": "10.5.1.0/24",
            "pipName": "[concat('enduser-pip',variables('suffix'))]",
            "publicIPAddressType": "Dynamic",
            "nsgName":"[concat('enduser-nsg',variables('suffix'))]",
            "dnsLabelPrefix": "[concat('enduserdns',variables('suffix'))]",
            "location": "[variables('location')]",
            "nicName": "[concat('enduser-nic',variables('suffix'))]",
            "VmName": "[concat('enduserVM',variables('suffix'))]",
            "vmSize": "Standard_DS1_v2",
            "Username": "[parameters('adminUsername')]",
            "Password": "[parameters('adminPassword')]",
            "imagePublisher": "Canonical",
            "imageOffer": "UbuntuServer",
            "ubuntuOSVersion": "16.04-LTS"
        },
        "location": "[resourceGroup().location]",
        "deploymentApiVersion": "2016-02-01",
        "suffix": "[substring(uniqueString(resourceGroup().id), 0, 5)]",
        "rgName":"[resourceGroup().name]",
        "baseUrl": "https://raw.githubusercontent.com/sysgain/fortigate-azure/master/"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "name": "vnetPeering",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'),'nested/vnetpeering.json?token=AE7OLVOKN3Q5PY3RMEXAV4S4Y7UHC')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "networkSettings": {
                        "value": "[variables('networkSettings')]"
                    },                 
                    "wlNetworkSettings": {
                        "value": "[variables('wlNetworkSettings')]"
                    },
                    "fortigateFirewallSettings": {
                        "value": "[variables('fortigateFirewallSettings')]"
                    },
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    },
                    "workloadsSettings":{
                        "value":"[variables('workloadsSettings')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "fortigateVM",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "vnetpeering"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'),'nested/fortigate.json?token=AE7OLVP4BNYHUWVERFKQTFS4Y3WZ2')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "fortigateFirewallSettings": {
                        "value": "[variables('fortigateFirewallSettings')]"
                    },                 
                    "networkSettings": {
                        "value": "[variables('networkSettings')]"
                    },                 
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "workloadVMs",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "vnetpeering"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'),'nested/workload.json?token=AE7OLVNYWBV73333ESWR4L24Y7UV2')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "workloadsSettings": {
                        "value": "[variables('workloadsSettings')]"
                    },   
                    "wlNetworkSettings": {
                        "value": "[variables('wlNetworkSettings')]"
                    },
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    },
                    "azureLogin":{
                        "value": "[parameters('azureLogin')]"
                    },
                    "azurePassword":{
                        "value": "[parameters('azurePassword')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "EndUserVM",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'),'nested/EnduserVM.json?token=AE7OLVNSQK27VUXZSVFMNUS4Y3WZ6')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "EndUserVMSettings":{
                        "value":"[variables('EndUserVMSettings')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "fortigateWebURL": {
            "type": "string",
            "value": "[concat('https://',reference('fortigateVM').outputs.fortigateFQDN.value)]"
        },
        "webUIAdminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "webUIAdminPassword": {
            "type": "string",
            "value": "[parameters('adminPassword')]"
        },
        "VM'sUserName":{
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "VM'sPassword":{
            "type": "string",
            "value": "[parameters('adminPassword')]"
        },
        "EndUserVMPublicDNS":{
            "type": "string",
            "value": "[reference('EndUserVM').outputs.enduserFQDN.value]"
        },
        "resourceGroupName":{
            "type": "string",
            "value": "[resourceGroup().name]"
        },
        "FortigateNic-1-IPAddress":{
            "type": "string",
            "value": "[variables('fortigateFirewallSettings').FGPubFacingAddress]"
        },
        "WorkloadVMPrivateIPAddress1":{
            "type": "string",
            "value": "[reference('workloadVMs').outputs.WorkloadVMPrivateIPAddress1.value]"
        },
        "WorkloadVMPrivateIPAddress2":{
            "type": "string",
            "value": "[reference('workloadVMs').outputs.WorkloadVMPrivateIPAddress2.value]"
        }   
    }
}
